// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package sqlc

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/sqlc-dev/pqtype"
)

type LevelJob string

const (
	LevelJobJunior LevelJob = "junior"
	LevelJobMedium LevelJob = "medium"
	LevelJobSenior LevelJob = "senior"
)

func (e *LevelJob) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = LevelJob(s)
	case string:
		*e = LevelJob(s)
	default:
		return fmt.Errorf("unsupported scan type for LevelJob: %T", src)
	}
	return nil
}

type NullLevelJob struct {
	LevelJob LevelJob `json:"level_job"`
	Valid    bool     `json:"valid"` // Valid is true if LevelJob is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullLevelJob) Scan(value interface{}) error {
	if value == nil {
		ns.LevelJob, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.LevelJob.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullLevelJob) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.LevelJob), nil
}

type Applicant struct {
	ID                        int32          `json:"id"`
	FullName                  string         `json:"full_name"`
	Email                     string         `json:"email"`
	CvLink                    string         `json:"cv_link"`
	Location                  sql.NullString `json:"location"`
	Availability              string         `json:"availability"`
	MonthlySalaryExpectations int32          `json:"monthly_salary_expectations"`
	LinkedinProfile           sql.NullString `json:"linkedin_profile"`
	GithubProfile             sql.NullString `json:"github_profile"`
	TelegramProfile           sql.NullString `json:"telegram_profile"`
	Languages                 []string       `json:"languages"`
	CreatedAt                 time.Time      `json:"created_at"`
	UpdatedAt                 sql.NullTime   `json:"updated_at"`
}

type ApplicantTag struct {
	ID          int32         `json:"id"`
	ApplicantID sql.NullInt32 `json:"applicant_id"`
	TagID       sql.NullInt32 `json:"tag_id"`
}

type Application struct {
	ID              int32          `json:"id"`
	JobID           sql.NullInt32  `json:"job_id"`
	ApplicantID     sql.NullInt32  `json:"applicant_id"`
	ApplicationDate time.Time      `json:"application_date"`
	Status          sql.NullString `json:"status"`
	CreatedAt       time.Time      `json:"created_at"`
	UpdatedAt       sql.NullTime   `json:"updated_at"`
}

type Category struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}

type Employer struct {
	ID               int32                 `json:"id"`
	Name             string                `json:"name"`
	Description      string                `json:"description"`
	SocialMediaLinks pqtype.NullRawMessage `json:"social_media_links"`
	CreatedAt        time.Time             `json:"created_at"`
	UpdatedAt        sql.NullTime          `json:"updated_at"`
}

type Job struct {
	ID          int32          `json:"id"`
	Name        string         `json:"name"`
	Description string         `json:"description"`
	Level       []LevelJob     `json:"level"`
	Location    string         `json:"location"`
	SalaryMin   sql.NullString `json:"salary_min"`
	SalaryMax   sql.NullString `json:"salary_max"`
	EmployerID  sql.NullInt32  `json:"employer_id"`
	ValidDate   time.Time      `json:"valid_date"`
	Active      sql.NullBool   `json:"active"`
	CreatedAt   time.Time      `json:"created_at"`
}

type JobCategory struct {
	ID         int32         `json:"id"`
	JobID      sql.NullInt32 `json:"job_id"`
	CategoryID sql.NullInt32 `json:"category_id"`
}

type Tag struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}
